from django.shortcuts import render, redirect, get_object_or_404
from .forms import ReportForm, RegisterForm, LoginForm, ReportUpdateForm, ReportAdminForm
from django.contrib.auth import login, authenticate, logout
from django.contrib.auth.decorators import login_required
from .models import Report
from django.db import connection
from django.contrib import messages

def index(request):
    return render(request, 'index.html')

def create_report(request):
    return render(request, 'createreport.html')

def report(request):
    return render(request, 'report.html')

def login_view(request):
    return render(request, 'login.html')

def register_view(request):
    return render(request, 'register.html')

def lk_view(request):
    return render(request, 'lk.html')

def report_view(request):
    if request.method == "POST":
        form = ReportForm(request.POST, request.FILES)
        if form.is_valid():
            report = form.save(commit=False)  # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç, –Ω–æ –ø–æ–∫–∞ –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º
            report.status = "new"  # –ü—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –≤—Ä—É—á–Ω—É—é
            report.save()  # –¢–µ–ø–µ—Ä—å —Å–æ—Ö—Ä–∞–Ω—è–µ–º
            return redirect('createreport')
        else:
            print(f"‚ùå –û—à–∏–±–∫–∏ —Ñ–æ—Ä–º—ã: {form.errors}")

    else:
        form = ReportForm()

    return render(request, 'report.html', {'form': form})


def register_view(request):
    if request.method == "POST":
        form = RegisterForm(request.POST)
        if form.is_valid():
            user = form.save()
            login(request, user)
            return redirect("home")  # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é
    else:
        form = RegisterForm()
    return render(request, "register.html", {"form": form})  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—É—â–∏–π —à–∞–±–ª–æ–Ω

def login_view(request):
    if request.method == "POST":
        form = LoginForm(data=request.POST)
        if form.is_valid():
            user = form.get_user()
            login(request, user)
            return redirect("home")
    else:
        form = LoginForm()
    return render(request, "login.html", {"form": form})  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—É—â–∏–π —à–∞–±–ª–æ–Ω

def logout_view(request):
    logout(request)
    return redirect("home")


@login_required
def profile(request):
    user_reports = Report.objects.filter(user=request.user)  # –§–∏–ª—å—Ç—Ä—É–µ–º –∑–∞—è–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    return render(request, 'lk.html', {'user': request.user, 'reports': user_reports})

def home(request):
    latest_reports = Report.objects.order_by('-created_at')[:4]  # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 4 –∑–∞—è–≤–∫–∏
    total_reports = Report.objects.count()  # –í—Å–µ–≥–æ –∑–∞—è–≤–æ–∫
    
    return render(request, 'index.html', {
        'latest_reports': latest_reports,
        'total_reports': total_reports
    })

def createreport(request):
    reports = Report.objects.all()  # –ó–∞–≥—Ä—É–∂–∞–µ–º –í–°–ï –∑–∞—è–≤–∫–∏

    status = request.GET.get('status')
    if status in ['new', 'resolved', 'rejected']:
        reports = reports.filter(status=status)  # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Å—Ç–∞—Ç—É—Å—É

    sort = request.GET.get('sort')
    if sort == 'date':
        reports = reports.order_by('-created_at')

    return render(request, 'createreport.html', {'reports': reports})


@login_required
def personal_cabinet(request):
    reports = Report.objects.filter(user=request.user) if not request.user.is_staff else Report.objects.all()
    return render(request, 'lk.html', {'reports': reports})

@login_required
def update_report(request, report_id):
    print(f"üîπ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏ {report_id}")  
    report = get_object_or_404(Report, id=report_id)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω –º–æ–∂–µ—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞—è–≤–∫–∏
    if not request.user.is_staff:
        messages.error(request, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞—è–≤–∫–∏.")
        return redirect('lk')

    if request.method == "POST":
        print(f"üì• –î–∞–Ω–Ω—ã–µ POST: {request.POST}")
        print(f"üì• –î–∞–Ω–Ω—ã–µ FILES: {request.FILES}")

        form = ReportAdminForm(request.POST, request.FILES, instance=report)
        if form.is_valid():
            print(f"‚úÖ –î–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º: {form.cleaned_data}")
            form.save()
            messages.success(request, "–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!")
            return redirect('lk')
        else:
            print(f"‚ùå –û—à–∏–±–∫–∏ —Ñ–æ—Ä–º—ã: {form.errors}")

    else:
        form = ReportAdminForm(instance=report)

    return render(request, 'update_report.html', {'form': form, 'report': report})


@login_required
def delete_report(request, report_id):
    report = get_object_or_404(Report, id=report_id)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω –º–æ–∂–µ—Ç —É–¥–∞–ª—è—Ç—å –∑–∞—è–≤–∫–∏
    if not request.user.is_staff:
        messages.error(request, "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç—É –∑–∞—è–≤–∫—É.")
        return redirect('lk')

    report.delete()
    messages.success(request, "–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞!")
    return redirect('lk')